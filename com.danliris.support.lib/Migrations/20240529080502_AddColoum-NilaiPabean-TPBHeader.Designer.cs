// <auto-generated />
using com.danliris.support.lib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace com.danliris.support.lib.Migrations
{
    [DbContext(typeof(SupportDbContext))]
    [Migration("20240529080502_AddColoum-NilaiPabean-TPBHeader")]
    partial class AddColoumNilaiPabeanTPBHeader
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("com.danliris.support.lib.Models.BEACUKAI_ADDED", b =>
                {
                    b.Property<string>("BCId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BCDate");

                    b.Property<string>("BCNo");

                    b.Property<string>("BCType");

                    b.Property<double>("Bruto");

                    b.Property<string>("BuyerCode");

                    b.Property<string>("BuyerName");

                    b.Property<string>("CAR");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("CreateUser");

                    b.Property<DateTime>("ExpenditureDate");

                    b.Property<string>("ExpenditureNo");

                    b.Property<double>("Netto");

                    b.Property<string>("Pack");

                    b.Property<DateTime?>("UpdateDate");

                    b.Property<string>("UpdateUser");

                    b.Property<string>("Vendor");

                    b.HasKey("BCId");

                    b.ToTable("BEACUKAI_ADDED");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.BEACUKAI_ADDED_DETAIL", b =>
                {
                    b.Property<string>("DetailBCId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BCId");

                    b.Property<string>("CAR");

                    b.Property<string>("CurrencyCode");

                    b.Property<string>("ItemCode");

                    b.Property<string>("ItemName");

                    b.Property<decimal>("Price");

                    b.Property<double>("Quantity");

                    b.Property<string>("UnitQtyCode");

                    b.Property<string>("UomUnit");

                    b.HasKey("DetailBCId");

                    b.HasIndex("BCId");

                    b.ToTable("BEACUKAI_ADDED_DETAIL");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.BEACUKAI_TEMP", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BCId");

                    b.Property<string>("BCNo");

                    b.Property<string>("Barang");

                    b.Property<decimal>("Bruto");

                    b.Property<decimal?>("CIF");

                    b.Property<decimal?>("CIF_Rupiah");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("Hari");

                    b.Property<long?>("IDHeader");

                    b.Property<string>("JenisBC");

                    b.Property<string>("JenisDokumen");

                    b.Property<int?>("JumlahBarang");

                    b.Property<decimal?>("JumlahSatBarang");

                    b.Property<string>("KodeBarang");

                    b.Property<string>("KodeKemasan");

                    b.Property<string>("KodeSupplier");

                    b.Property<string>("NamaKemasan");

                    b.Property<string>("NamaSupplier");

                    b.Property<decimal?>("Netto");

                    b.Property<string>("NoAju");

                    b.Property<string>("NomorDokumen");

                    b.Property<string>("Sat");

                    b.Property<DateTime?>("TanggalDokumen");

                    b.Property<DateTime>("TglBCNo");

                    b.Property<DateTime?>("TglDaftarAju");

                    b.Property<DateTime>("TglDatang");

                    b.Property<string>("Valuta");

                    b.Property<string>("Vendor");

                    b.HasKey("ID");

                    b.ToTable("BEACUKAI_TEMP");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.BeacukaiDocumentsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Code");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("BEACUKAI_DOCUMENTS");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.Master.HS.HSModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("HSNo");

                    b.Property<string>("HSRemark");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.ToTable("HSCodes");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBBankDevisa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<string>("kodeBank");

                    b.Property<int>("seriBank");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("PEBBankDevisa");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBBarang", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<double>("cif");

                    b.Property<double>("cifRupiah");

                    b.Property<double>("fob");

                    b.Property<decimal>("hargaEkspor")
                        .HasColumnType("decimal(24, 4)");

                    b.Property<decimal>("hargaPatokan")
                        .HasColumnType("decimal(24, 4)");

                    b.Property<double>("hargaPerolehan");

                    b.Property<decimal>("hargaSatuan")
                        .HasColumnType("decimal(24, 4)");

                    b.Property<double>("jumlahKemasan");

                    b.Property<double>("jumlahSatuan");

                    b.Property<string>("kodeAsalBahanBaku");

                    b.Property<string>("kodeBarang");

                    b.Property<string>("kodeDaerahAsal");

                    b.Property<string>("kodeDokumen");

                    b.Property<string>("kodeJenisKemasan");

                    b.Property<string>("kodeNegaraAsal");

                    b.Property<string>("kodeSatuanBarang");

                    b.Property<string>("merk");

                    b.Property<double>("ndpbm");

                    b.Property<decimal>("netto")
                        .HasColumnType("decimal(24, 4)");

                    b.Property<double>("nilaiBarang");

                    b.Property<double>("nilaiDanaSawit");

                    b.Property<string>("posTarif");

                    b.Property<int>("seriBarang");

                    b.Property<string>("spesifikasiLain");

                    b.Property<string>("tipe");

                    b.Property<string>("ukuran");

                    b.Property<string>("uraian");

                    b.Property<decimal>("volume")
                        .HasColumnType("decimal(24, 4)");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("PEBBarang");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBBarang_Dokumen", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdBarang");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<int>("seriDokumen");

                    b.HasKey("Id");

                    b.HasIndex("IdBarang");

                    b.ToTable("PEBBarang_Dokumen");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBBarang_Pemilik", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdBarang");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<int>("seriEntitas");

                    b.HasKey("Id");

                    b.HasIndex("IdBarang");

                    b.ToTable("PEBBarang_Pemilik");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBBarang_Tarif", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdBarang");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<double>("jumlahSatuan")
                        .HasColumnType("decimal(20, 4)");

                    b.Property<string>("kodeFasilitasTarif");

                    b.Property<string>("kodeJenisPungutan");

                    b.Property<string>("kodeJenisTarif");

                    b.Property<string>("kodeSatuanBarang");

                    b.Property<double>("nilaiBayar");

                    b.Property<int>("seriBarang");

                    b.Property<double>("tarif");

                    b.Property<double>("tarifFasilitas");

                    b.HasKey("Id");

                    b.HasIndex("IdBarang");

                    b.ToTable("PEBBarang_Tarif");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBDokumen", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<string>("idDokumen");

                    b.Property<string>("kodeDokumen");

                    b.Property<string>("nomorDokumen");

                    b.Property<int>("seriDokumen");

                    b.Property<DateTime>("tanggalDokumen");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("PEBDokumen");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBEntitas", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<string>("alamatEntitas");

                    b.Property<string>("kodeEntitas");

                    b.Property<string>("kodeJenisIdentitas");

                    b.Property<string>("kodeNegara");

                    b.Property<string>("namaEntitas");

                    b.Property<string>("nibEntitas");

                    b.Property<string>("nomorIdentitas");

                    b.Property<int>("seriEntitas");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("PEBEntitas");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<string>("asalData");

                    b.Property<double>("asuransi");

                    b.Property<decimal>("bruto")
                        .HasColumnType("decimal(24, 4)");

                    b.Property<double>("cif");

                    b.Property<string>("disclaimer");

                    b.Property<string>("flagCurah");

                    b.Property<string>("flagMigas");

                    b.Property<double>("fob");

                    b.Property<double>("freight");

                    b.Property<string>("idPengguna");

                    b.Property<bool>("isPosted");

                    b.Property<string>("jabatanTtd");

                    b.Property<double>("jumlahKontainer");

                    b.Property<string>("kodeAsuransi");

                    b.Property<string>("kodeCaraBayar");

                    b.Property<string>("kodeCaraDagang");

                    b.Property<string>("kodeDokumen");

                    b.Property<string>("kodeIncoterm");

                    b.Property<string>("kodeJenisEkspor");

                    b.Property<string>("kodeJenisNilai");

                    b.Property<string>("kodeJenisProsedur");

                    b.Property<string>("kodeKantor");

                    b.Property<string>("kodeKantorEkspor");

                    b.Property<string>("kodeKantorMuat");

                    b.Property<string>("kodeKantorPeriksa");

                    b.Property<string>("kodeKategoriEkspor");

                    b.Property<string>("kodeLokasi");

                    b.Property<string>("kodeNegaraTujuan");

                    b.Property<string>("kodePelBongkar");

                    b.Property<string>("kodePelEkspor");

                    b.Property<string>("kodePelMuat");

                    b.Property<string>("kodePelTujuan");

                    b.Property<string>("kodePembayar");

                    b.Property<string>("kodeTps");

                    b.Property<string>("kodeValuta");

                    b.Property<string>("kotaTtd");

                    b.Property<string>("namaTtd");

                    b.Property<decimal>("ndpbm")
                        .HasColumnType("decimal(24, 4)");

                    b.Property<decimal>("netto")
                        .HasColumnType("decimal(24, 4)");

                    b.Property<double>("nilaiMaklon");

                    b.Property<string>("nomorAju");

                    b.Property<string>("nomorBc11");

                    b.Property<string>("nomorDaftar");

                    b.Property<string>("posBc11");

                    b.Property<string>("postedBy");

                    b.Property<int>("seri");

                    b.Property<string>("subposBc11");

                    b.Property<DateTime>("tanggalAju");

                    b.Property<DateTime>("tanggalBc11");

                    b.Property<DateTime?>("tanggalDaftar");

                    b.Property<DateTime>("tanggalEkspor");

                    b.Property<DateTime>("tanggalPeriksa");

                    b.Property<DateTime>("tanggalTtd");

                    b.Property<double>("totalDanaSawit");

                    b.HasKey("Id");

                    b.ToTable("PEBHeader");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBKemasan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<int>("jumlahKemasan");

                    b.Property<string>("kodeJenisKemasan");

                    b.Property<string>("merkKemasan");

                    b.Property<int>("seriKemasan");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("PEBKemasan");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBKesiapanBarang", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<string>("alamat");

                    b.Property<int>("jumlahContainer20");

                    b.Property<int>("jumlahContainer40");

                    b.Property<string>("kodeCaraStuffing");

                    b.Property<string>("kodeJenisBarang");

                    b.Property<string>("kodeJenisGudang");

                    b.Property<string>("kodeJenisPartOf");

                    b.Property<string>("lokasiSiapPeriksa");

                    b.Property<string>("namaPic");

                    b.Property<string>("nomorTelpPic");

                    b.Property<DateTime>("tanggalPkb");

                    b.Property<DateTimeOffset>("waktuSiapPeriksa");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("PEBKesiapanBarang");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBKontainer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<string>("kodeJenisKontainer");

                    b.Property<string>("kodeTipeKontainer");

                    b.Property<string>("kodeUkuranKontainer");

                    b.Property<string>("nomorKontainer");

                    b.Property<int>("seriKontainer");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("PEBKontainer");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBPengangkut", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<string>("kodeBendera");

                    b.Property<string>("kodeCaraAngkut");

                    b.Property<string>("namaPengangkut");

                    b.Property<string>("nomorPengangkut");

                    b.Property<int>("seriPengangkut");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("PEBPengangkut");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBBahanBaku", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<double>("cif");

                    b.Property<double>("cifRupiah");

                    b.Property<string>("flagTis");

                    b.Property<double>("hargaPenyerahan");

                    b.Property<double>("hargaPerolehan");

                    b.Property<double>("isiPerKemasan");

                    b.Property<double>("jumlahSatuan");

                    b.Property<string>("kodeAsalBahanBaku");

                    b.Property<string>("kodeBarang");

                    b.Property<string>("kodeDokAsal");

                    b.Property<string>("kodeDokumen");

                    b.Property<string>("kodeKantor");

                    b.Property<string>("kodeSatuanBarang");

                    b.Property<string>("merkBarang");

                    b.Property<double>("ndpbm");

                    b.Property<double>("netto");

                    b.Property<double>("nilaiJasa");

                    b.Property<string>("nomorDaftarDokAsal");

                    b.Property<string>("nomorDokumen");

                    b.Property<string>("posTarif");

                    b.Property<int>("seriBahanBaku");

                    b.Property<int>("seriBarang");

                    b.Property<int>("seriBarangDokAsal");

                    b.Property<int>("seriIjin");

                    b.Property<string>("spesifikasiLainBarang");

                    b.Property<string>("tanggalDaftarDokAsal");

                    b.Property<string>("tipeBarang");

                    b.Property<string>("ukuranBarang");

                    b.Property<string>("uraianBarang");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("TPBBahanBaku");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBBahanBakuTarif", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<double>("jumlahKemasan");

                    b.Property<double>("jumlahSatuan");

                    b.Property<string>("kodeAsalBahanBaku");

                    b.Property<string>("kodeFasilitasTarif");

                    b.Property<string>("kodeJenisPungutan");

                    b.Property<string>("kodeJenisTarif");

                    b.Property<string>("kodeSatuanBarang");

                    b.Property<double>("nilaiBayar");

                    b.Property<double>("nilaiFasilitas");

                    b.Property<double>("nilaiSudahDilunasi");

                    b.Property<int>("seriBahanBaku");

                    b.Property<double>("tarif");

                    b.Property<double>("tarifFasilitas");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("TPBBahanBakuTarif");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBBarang", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<double>("asuransi");

                    b.Property<double>("bruto");

                    b.Property<double>("cif");

                    b.Property<double>("cifRupiah");

                    b.Property<double>("diskon");

                    b.Property<double>("fob");

                    b.Property<double>("freight");

                    b.Property<double>("hargaEkspor");

                    b.Property<double>("hargaPenyerahan");

                    b.Property<double>("hargaPerolehan");

                    b.Property<double>("hargaSatuan");

                    b.Property<int>("isiPerKemasan");

                    b.Property<double>("jumlahKemasan");

                    b.Property<double>("jumlahRealisasi");

                    b.Property<double>("jumlahSatuan");

                    b.Property<string>("kodeAsalBahanBaku");

                    b.Property<string>("kodeAsalBarang");

                    b.Property<string>("kodeBarang");

                    b.Property<string>("kodeDokAsal");

                    b.Property<string>("kodeDokumen");

                    b.Property<string>("kodeGunaBarang");

                    b.Property<string>("kodeJenisKemasan");

                    b.Property<string>("kodeKategoriBarang");

                    b.Property<string>("kodeKondisiBarang");

                    b.Property<string>("kodeNegaraAsal");

                    b.Property<string>("kodePerhitungan");

                    b.Property<string>("kodeSatuanBarang");

                    b.Property<string>("merk");

                    b.Property<double>("ndpbm");

                    b.Property<double>("netto");

                    b.Property<double>("nilaiBarang");

                    b.Property<int>("nilaiJasa");

                    b.Property<double>("nilaiTambah");

                    b.Property<string>("posTarif");

                    b.Property<int>("seriBarang");

                    b.Property<string>("spesifikasiLain");

                    b.Property<string>("tipe");

                    b.Property<double>("uangMuka");

                    b.Property<string>("ukuran");

                    b.Property<string>("uraian");

                    b.Property<double>("volume");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("TPBBarang");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBBarang_BahanBaku", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdBarang");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<double>("cif");

                    b.Property<double>("cifRupiah");

                    b.Property<string>("flagTis");

                    b.Property<double>("hargaPenyerahan");

                    b.Property<double>("hargaPerolehan");

                    b.Property<double>("isiPerKemasan");

                    b.Property<double>("jumlahSatuan");

                    b.Property<string>("kodeAsalBahanBaku");

                    b.Property<string>("kodeBarang");

                    b.Property<string>("kodeDokAsal");

                    b.Property<string>("kodeDokumen");

                    b.Property<string>("kodeKantor");

                    b.Property<string>("kodeSatuanBarang");

                    b.Property<string>("merkBarang");

                    b.Property<double>("ndpbm");

                    b.Property<double>("netto");

                    b.Property<double>("nilaiJasa");

                    b.Property<string>("nomorAjuDokAsal");

                    b.Property<string>("nomorDaftarDokAsal");

                    b.Property<string>("nomorDokumen");

                    b.Property<string>("posTarif");

                    b.Property<int>("seriBahanBaku");

                    b.Property<int>("seriBarang");

                    b.Property<int>("seriBarangDokAsal");

                    b.Property<int>("seriIjin");

                    b.Property<string>("spesifikasiLainBarang");

                    b.Property<string>("tanggalDaftarDokAsal");

                    b.Property<string>("tipeBarang");

                    b.Property<string>("ukuranBarang");

                    b.Property<string>("uraianBarang");

                    b.HasKey("Id");

                    b.HasIndex("IdBarang");

                    b.ToTable("TPBBarang_BahanBaku");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBBarang_BahanBakuTarif", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdBarang_BahanBaku");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<double>("jumlahSatuan");

                    b.Property<string>("kodeFasilitasTarif");

                    b.Property<string>("kodeJenisPungutan");

                    b.Property<string>("kodeJenisTarif");

                    b.Property<double>("nilaiBayar");

                    b.Property<double>("nilaiFasilitas");

                    b.Property<double>("nilaiSudahDilunasi");

                    b.Property<int>("seriBahanBaku");

                    b.Property<double>("tarif");

                    b.Property<double>("tarifFasilitas");

                    b.HasKey("Id");

                    b.HasIndex("IdBarang_BahanBaku");

                    b.ToTable("TPBBarang_BahanBakuTarif");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBBarang_Dokumen", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdBarang");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<string>("seriDokumen");

                    b.HasKey("Id");

                    b.HasIndex("IdBarang");

                    b.ToTable("TPBBarang_Dokumen");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBBarang_Tarif", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdBarang");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<double>("jumlahSatuan");

                    b.Property<string>("kodeFasilitasTarif");

                    b.Property<string>("kodeJenisPungutan");

                    b.Property<string>("kodeJenisTarif");

                    b.Property<string>("kodeSatuanBarang");

                    b.Property<double>("nilaiBayar");

                    b.Property<double>("nilaiFasilitas");

                    b.Property<double>("nilaiSudahDilunasi");

                    b.Property<int>("seriBarang");

                    b.Property<double>("tarif");

                    b.Property<double>("tarifFasilitas");

                    b.HasKey("Id");

                    b.HasIndex("IdBarang");

                    b.ToTable("TPBBarang_Tarif");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBDokumen", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<string>("kodeDokumen");

                    b.Property<string>("kodeFasilitas");

                    b.Property<string>("nomorDokumen");

                    b.Property<int>("seriDokumen");

                    b.Property<DateTime>("tanggalDokumen");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("TPBDokumen");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBEntitas", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<string>("alamatEntitas");

                    b.Property<string>("kodeEntitas");

                    b.Property<string>("kodeJenisApi");

                    b.Property<string>("kodeJenisIdentitas");

                    b.Property<string>("kodeNegara");

                    b.Property<string>("kodeStatus");

                    b.Property<string>("namaEntitas");

                    b.Property<string>("nibEntitas");

                    b.Property<string>("niperEntitas");

                    b.Property<string>("nomorIdentitas");

                    b.Property<string>("nomorIjinEntitas");

                    b.Property<int>("seriEntitas");

                    b.Property<DateTime>("tanggalIjinEntitas");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("TPBEntitas");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<string>("asalData");

                    b.Property<double>("asuransi");

                    b.Property<double>("biayaPengurang");

                    b.Property<double>("biayaTambahan");

                    b.Property<double>("bruto");

                    b.Property<double>("cif");

                    b.Property<string>("disclaimer");

                    b.Property<double>("diskon");

                    b.Property<double>("fob");

                    b.Property<double>("freight");

                    b.Property<double>("hargaPenyerahan");

                    b.Property<string>("idPengguna");

                    b.Property<bool>("isPosted");

                    b.Property<string>("jabatanTtd");

                    b.Property<int>("jumlahKontainer");

                    b.Property<string>("kodeAsuransi");

                    b.Property<string>("kodeCaraBayar");

                    b.Property<string>("kodeDokumen");

                    b.Property<string>("kodeIncoterm");

                    b.Property<string>("kodeJenisTpb");

                    b.Property<string>("kodeKantor");

                    b.Property<string>("kodeKantorBongkar");

                    b.Property<string>("kodeKenaPajak");

                    b.Property<string>("kodeLokasiBayar");

                    b.Property<string>("kodePelBongkar");

                    b.Property<string>("kodePelMuat");

                    b.Property<string>("kodePelTransit");

                    b.Property<string>("kodeTps");

                    b.Property<string>("kodeTujuanPemasukan");

                    b.Property<string>("kodeTujuanPengiriman");

                    b.Property<string>("kodeTujuanTpb");

                    b.Property<string>("kodeTutupPu");

                    b.Property<string>("kodeValuta");

                    b.Property<string>("kotaTtd");

                    b.Property<string>("namaTtd");

                    b.Property<double>("ndpbm");

                    b.Property<double>("netto");

                    b.Property<string>("nik");

                    b.Property<double>("nilaiBarang");

                    b.Property<double>("nilaiJasa");

                    b.Property<double>("nilaiPabean");

                    b.Property<string>("nomorAju");

                    b.Property<string>("nomorBc11");

                    b.Property<string>("nomorDaftar");

                    b.Property<string>("posBc11");

                    b.Property<string>("postedBy");

                    b.Property<double>("ppnPajak");

                    b.Property<double>("ppnbmPajak");

                    b.Property<int>("seri");

                    b.Property<string>("subposBc11");

                    b.Property<DateTime>("tanggalAju");

                    b.Property<DateTime?>("tanggalBc11");

                    b.Property<DateTime?>("tanggalDaftar");

                    b.Property<DateTime?>("tanggalTiba");

                    b.Property<DateTime>("tanggalTtd");

                    b.Property<double>("tarifPpnPajak");

                    b.Property<double>("tarifPpnbmPajak");

                    b.Property<string>("tempatStuffing");

                    b.Property<DateTime?>("tglAkhirBerlaku");

                    b.Property<DateTime?>("tglAwalBerlaku");

                    b.Property<double>("totalDanaSawit");

                    b.Property<double>("uangMuka");

                    b.Property<double>("vd");

                    b.Property<double>("volume");

                    b.HasKey("Id");

                    b.ToTable("TPBHeader");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBJaminan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<string>("idJaminan");

                    b.Property<string>("kodeJenisJaminan");

                    b.Property<double>("nilaiJaminan");

                    b.Property<string>("nomorBpj");

                    b.Property<string>("nomorJaminan");

                    b.Property<string>("penjamin");

                    b.Property<string>("tanggalBpj");

                    b.Property<string>("tanggalJaminan");

                    b.Property<string>("tanggalJatuhTempo");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("TPBJaminan");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBKemasan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<int>("jumlahKemasan");

                    b.Property<string>("kodeJenisKemasan");

                    b.Property<string>("merkKemasan");

                    b.Property<int>("seriKemasan");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("TPBKemasan");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBKontainer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<string>("kodeJenisKontainer");

                    b.Property<string>("kodeTipeKontainer");

                    b.Property<string>("kodeUkuranKontainer");

                    b.Property<string>("nomorKontainer");

                    b.Property<int>("seriKontainer");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("TPBKontainer");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBPengangkut", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<string>("idPengangkut");

                    b.Property<string>("kodeBendera");

                    b.Property<string>("kodeCaraAngkut");

                    b.Property<string>("namaPengangkut");

                    b.Property<string>("nomorPengangkut");

                    b.Property<int>("seriPengangkut");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("TPBPengangkut");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBPungutan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("IdHeader");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.Property<string>("idPungutan");

                    b.Property<string>("kodeFasilitasTarif");

                    b.Property<string>("kodeJenisPungutan");

                    b.Property<double>("nilaiPungutan");

                    b.HasKey("Id");

                    b.HasIndex("IdHeader");

                    b.ToTable("TPBPungutan");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.FactBeacukai", b =>
                {
                    b.Property<string>("DetailshippingOrderId")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("BCDate")
                        .HasColumnName("BCDate")
                        .HasColumnType("datetime");

                    b.Property<string>("BCId")
                        .HasColumnName("BCId")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BCNo")
                        .HasColumnName("BCNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BCType")
                        .HasColumnName("BCType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("BonDate")
                        .HasColumnType("datetime");

                    b.Property<string>("BonNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("Id");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ItemName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Nominal")
                        .HasColumnType("money");

                    b.Property<decimal>("PricePo")
                        .HasColumnType("money");

                    b.Property<double>("Quantity");

                    b.Property<decimal>("Rate")
                        .HasColumnType("money");

                    b.Property<string>("SupllierCode")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UnitQtyName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("DetailshippingOrderId");

                    b.ToTable("FactBeacukai");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.HOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Article");

                    b.Property<string>("Codeby");

                    b.Property<string>("Complete");

                    b.Property<DateTimeOffset>("Deadline");

                    b.Property<double>("Eff");

                    b.Property<string>("Jamed");

                    b.Property<string>("Jamin");

                    b.Property<string>("Kode");

                    b.Property<string>("Konf");

                    b.Property<double>("Kurs");

                    b.Property<int?>("LT");

                    b.Property<string>("Mt_Uang");

                    b.Property<string>("No");

                    b.Property<DateTimeOffset>("Ord_Date");

                    b.Property<double>("Otlk");

                    b.Property<double>("Otlu");

                    b.Property<double>("Pcs");

                    b.Property<DateTimeOffset>("Plan_Date");

                    b.Property<string>("Post");

                    b.Property<DateTimeOffset>("Ppic_Date");

                    b.Property<double>("Price");

                    b.Property<double>("Qty");

                    b.Property<string>("Repeat");

                    b.Property<string>("Salesman");

                    b.Property<string>("Sat");

                    b.Property<string>("SatPcs");

                    b.Property<string>("Seksi");

                    b.Property<double>("Sh");

                    b.Property<double>("Sh_Cut");

                    b.Property<double>("Sh_Fin");

                    b.Property<double>("Sh_Sew");

                    b.Property<DateTimeOffset>("Ship");

                    b.Property<DateTimeOffset>("Ship_Date");

                    b.Property<DateTimeOffset>("Tgl");

                    b.Property<DateTimeOffset>("Tgled");

                    b.Property<DateTimeOffset>("Tglin");

                    b.Property<string>("Usered");

                    b.Property<string>("Userin");

                    b.Property<string>("Valas");

                    b.Property<string>("Valid");

                    b.Property<double>("Ws");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.ToTable("HOrder");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Machine.Machine", b =>
                {
                    b.Property<string>("MachineID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ActivateDate");

                    b.Property<string>("BCNumber")
                        .HasMaxLength(100);

                    b.Property<string>("BCOutNumber")
                        .HasMaxLength(100);

                    b.Property<string>("Classification")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CloseDate");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("IDNumber")
                        .HasMaxLength(256);

                    b.Property<int?>("MachineBeginningBalance");

                    b.Property<string>("MachineBrand")
                        .HasMaxLength(50);

                    b.Property<string>("MachineCategory")
                        .HasMaxLength(50);

                    b.Property<double?>("MachineIndex");

                    b.Property<int?>("MachineQuantity");

                    b.Property<string>("MachineType")
                        .HasMaxLength(50);

                    b.Property<double?>("MachineValue");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<double?>("PurchaseYear");

                    b.Property<string>("State")
                        .HasMaxLength(10);

                    b.Property<string>("SupplierType")
                        .HasMaxLength(50);

                    b.Property<string>("UnitQuantity")
                        .HasMaxLength(50);

                    b.HasKey("MachineID");

                    b.ToTable("Machine");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Machine.MachineMutation", b =>
                {
                    b.Property<Guid>("TransactionID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Description")
                        .HasMaxLength(512);

                    b.Property<string>("MachineID")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<double?>("TransactionAmount");

                    b.Property<DateTime?>("TransactionDate");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(50);

                    b.HasKey("TransactionID");

                    b.ToTable("MachineMutation");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.MachineBrand", b =>
                {
                    b.Property<string>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("BrandName")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Description")
                        .HasMaxLength(1024);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate");

                    b.HasKey("BrandID");

                    b.ToTable("MachineBrand");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.MachineCategory", b =>
                {
                    b.Property<string>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Description")
                        .HasMaxLength(1024);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate");

                    b.HasKey("CategoryID");

                    b.ToTable("MachineCategory");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.ViewFactBeacukai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("BCDate");

                    b.Property<string>("BCId");

                    b.Property<string>("BCNo");

                    b.Property<string>("BCType");

                    b.Property<DateTime?>("BonDate");

                    b.Property<string>("BonNo");

                    b.Property<string>("CurrencyCode");

                    b.Property<string>("DetailshippingOrderId");

                    b.Property<string>("ItemCode");

                    b.Property<string>("ItemName");

                    b.Property<decimal>("Nominal");

                    b.Property<double>("Quantity");

                    b.Property<string>("SupllierCode");

                    b.Property<string>("SupplierName");

                    b.Property<DateTime>("TglDatang");

                    b.Property<string>("Tipe");

                    b.Property<string>("UnitQtyName");

                    b.Property<string>("Vendor");

                    b.Property<string>("_CreatedAgent");

                    b.Property<string>("_CreatedBy");

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent");

                    b.Property<string>("_DeletedBy");

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent");

                    b.Property<string>("_LastModifiedBy");

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.ToTable("ViewFactBeacukai");
                });

            modelBuilder.Entity("com.danliris.support.lib.ViewModel.ScrapViewModel", b =>
                {
                    b.Property<string>("ClassificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClassificationId");

                    b.Property<string>("ClassificationCode");

                    b.Property<string>("ClassificationName");

                    b.Property<string>("DestinationId");

                    b.Property<string>("Pemasukan");

                    b.Property<string>("Pengeluaran");

                    b.Property<string>("Penyesuaian");

                    b.Property<string>("SaldoAwal");

                    b.Property<string>("SaldoBuku");

                    b.Property<string>("Selisih");

                    b.Property<string>("StockId");

                    b.Property<string>("StockOpname");

                    b.Property<string>("UnitQtyName");

                    b.HasKey("ClassificationId");

                    b.ToTable("ViewScrap");
                });

            modelBuilder.Entity("com.danliris.support.lib.ViewModel.WIPViewModel", b =>
                {
                    b.Property<string>("Kode")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comodity");

                    b.Property<string>("UnitQtyName");

                    b.Property<string>("WIP");

                    b.HasKey("Kode");

                    b.ToTable("ViewWIP");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.BEACUKAI_ADDED_DETAIL", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.BEACUKAI_ADDED", "BEACUKAI_ADDED")
                        .WithMany("Items")
                        .HasForeignKey("BCId");
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBBankDevisa", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.PEB.PEBHeader", "PEBHeader")
                        .WithMany("bankDevisa")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBBarang", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.PEB.PEBHeader", "PEBHeader")
                        .WithMany("barang")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBBarang_Dokumen", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.PEB.PEBBarang", "PEBBarang")
                        .WithMany("barangDokumen")
                        .HasForeignKey("IdBarang")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBBarang_Pemilik", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.PEB.PEBBarang", "PEBBarang")
                        .WithMany("barangPemilik")
                        .HasForeignKey("IdBarang")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBBarang_Tarif", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.PEB.PEBBarang", "PEBBarang")
                        .WithMany("barangTarif")
                        .HasForeignKey("IdBarang")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBDokumen", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.PEB.PEBHeader", "PEBHeader")
                        .WithMany("dokumen")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBEntitas", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.PEB.PEBHeader", "PEBHeader")
                        .WithMany("entitas")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBKemasan", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.PEB.PEBHeader", "PEBHeader")
                        .WithMany("kemasan")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBKesiapanBarang", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.PEB.PEBHeader", "PEBHeader")
                        .WithMany("kesiapanBarang")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBKontainer", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.PEB.PEBHeader", "PEBHeader")
                        .WithMany("kontainer")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.PEB.PEBPengangkut", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.PEB.PEBHeader", "PEBHeader")
                        .WithMany("pengangkut")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBBahanBaku", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.TPB.TPBHeader", "TPBHeader")
                        .WithMany("bahanBaku")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBBahanBakuTarif", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.TPB.TPBHeader", "TPBHeader")
                        .WithMany("bahanBakuTarif")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBBarang", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.TPB.TPBHeader", "TPBHeader")
                        .WithMany("barang")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBBarang_BahanBaku", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.TPB.TPBBarang", "TPBBarang")
                        .WithMany("bahanBaku")
                        .HasForeignKey("IdBarang")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBBarang_BahanBakuTarif", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.TPB.TPBBarang_BahanBaku", "TPBBarang_BahanBaku")
                        .WithMany("bahanBakuTarif")
                        .HasForeignKey("IdBarang_BahanBaku")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBBarang_Dokumen", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.TPB.TPBBarang", "TPBBarang")
                        .WithMany("barangDokumen")
                        .HasForeignKey("IdBarang")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBBarang_Tarif", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.TPB.TPBBarang", "TPBBarang")
                        .WithMany("barangTarif")
                        .HasForeignKey("IdBarang")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBDokumen", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.TPB.TPBHeader", "TPBHeader")
                        .WithMany("dokumen")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBEntitas", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.TPB.TPBHeader", "TPBHeader")
                        .WithMany("entitas")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBJaminan", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.TPB.TPBHeader", "TPBHeader")
                        .WithMany("jaminan")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBKemasan", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.TPB.TPBHeader", "TPBHeader")
                        .WithMany("kemasan")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBKontainer", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.TPB.TPBHeader", "TPBHeader")
                        .WithMany("kontainer")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBPengangkut", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.TPB.TPBHeader", "TPBHeader")
                        .WithMany("pengangkut")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.danliris.support.lib.Models.Ceisa.TPB.TPBPungutan", b =>
                {
                    b.HasOne("com.danliris.support.lib.Models.Ceisa.TPB.TPBHeader", "TPBHeader")
                        .WithMany("pungutan")
                        .HasForeignKey("IdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
